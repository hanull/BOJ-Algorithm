import java.io.*;
import java.util.*;

public class Main {
  static int n;
  static int[][] map;
  static boolean[][] visited;
  static int[] dx= {0,1,1}; // 0:가로 , 1:대각선, 2:세로
  static int[] dy= {1,1,0};
  static int result=0;
  public static void solve(int x, int y, int d) {
    if(x==n-1&&y==n-1) {
      result++;
     // System.out.println(x+" "+y+" result:"+result);
      return;
    }
    System.out.println("X:"+x+" Y:"+y);
    if(d==0) {   // 가로
      for(int i=0; i<2; i++) {
        int nx=x+dx[i];
        int ny=y+dy[i];
        System.out.println(nx+ " " +ny);
        if(nx<0||nx>n-1||ny<0||ny>n-1) continue;
        if(map[nx][ny]==1) continue;
        System.out.println("111111111111111  "+nx+" "+ny+"   "+map[nx][ny]);
     //   if(visited[nx][ny]) continue;
        solve(nx,ny,i);
      }
    }else if(d==1) {  // 세로
      for(int i=1; i<3; i++) {
        int nx=x+dx[i];
        int ny=y+dy[i];
        if(nx<0||nx>n-1||ny<0||ny>n-1) continue;
        if(map[nx][ny]==1) continue;
        System.out.println("2222222222222221");
    //    if(visited[nx][ny]) continue;
        solve(nx,ny,i);
      }
    }else {      // 대각선
      for(int i=0; i<3; i++) {
        int nx=x+dx[i];
        int ny=y+dy[i];
        if(nx<0||nx>n-1||ny<0||ny>n-1) continue;
        if(map[nx][ny]==1) continue;
        System.out.println(x+" "+y);
        System.out.println("33333333333333333333");
      //  if(visited[nx][ny]) continue;
        solve(nx,ny,i);
      }
    }
    
  }
  public static void main(String[] args) throws Exception{
    BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
    n=Integer.parseInt(br.readLine());
    map=new int[n][n];
    for(int i=0; i<n; i++) {
      StringTokenizer st = new StringTokenizer(br.readLine());
      for(int j=0; j<n; j++) {
        map[i][j]=Integer.parseInt(st.nextToken());
      }
    }
    solve(0,1,0);
    System.out.println(result);
  }
}
