import java.io.*;
import java.util.*;

public class Main {
  static int[][] map=new int[9][9];
  static ArrayList<Pair> list = new ArrayList<>();
  
  public static void dfs(int cnt, int index) {
    if(cnt==list.size()) {
      print();
      System.exit(0);;
    }
    
    for(int num=1; num<=9; num++) {
      if(isPossible(index,num)) {
        map[list.get(index).x][list.get(index).y]=num;
        dfs(cnt+1, index+1);
        map[list.get(index).x][list.get(index).y]=0;
      }
    }
  }
  
  public static boolean isPossible(int index, int num) {
    // i행 체크
    Pair tmp = list.get(index);
    int tx=tmp.x;
    int ty=tmp.y;
    for(int c=0; c<9; c++) {
      if(map[tx][c]==num) return false;
    }
    // i열 체크
    for(int r=0; r<9; r++) {
      if(map[r][ty]==num) return false;
    }
    // 3*3 정사각형  체크
    for(int i=tx/3*3; i<tx/3*3+3; i++) {
      for(int j=ty/3*3; j<ty/3*3+3; j++) {
        if(map[i][j]==num) return false;
      }
    }
    return true;
  }
  public static void print() {
    for(int i=0; i<9; i++) {
      for(int j=0; j<9; j++) {
        System.out.print(map[i][j] + " ");
      }
      System.out.println();
    }
  }
  public static class Pair{
    int x,y;
    public Pair(int x, int y) {
      this.x=x;
      this.y=y;
    }
  }
  public static void main(String[] args) throws Exception{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st;
    for(int i=0; i<9; i++) {
      st=new StringTokenizer(br.readLine());
      for(int j=0; j<9; j++) {
        map[i][j]=Integer.parseInt(st.nextToken());
        if(map[i][j]==0) list.add(new Pair(i, j));
      }
    }
    dfs(0,0);
    
  }
}
