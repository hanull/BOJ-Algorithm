import java.io.*;
import java.util.*;

public class Main {
  static int n,m;
  static int[][] map,copymap;
  static boolean[][] visited;
  static int[] dx= {-1,1,0,0};
  static int[] dy= {0,0,-1,1};
  static int result=Integer.MIN_VALUE;
  static ArrayList<Pair> virus = new ArrayList<>();
  public static void solve(int cnt) {
    if(cnt==3) {
      copy(0);
      spread();
      int total = cal(); // 안전영역 구하기
      if(total>result) result=total;
      copy(1);
      return;
    }
    for(int i=0; i<n; i++) {
      for(int j=0; j<m; j++) {
        if(map[i][j]==0) {
          map[i][j]=1;
          solve(cnt+1);
          map[i][j]=0;
        }
      }
    }
  }
  public static void spread() { // 바이러스 확산
    Queue<Pair> q = new LinkedList<>();
    q.addAll(virus);
    for(int i=0; i<virus.size(); i++) {
      visited[virus.get(i).x][virus.get(i).y]=true;
    }
    while(!q.isEmpty()) {
      int len=q.size();
      while(len-->0) {
        Pair tmp = q.poll();
        int tx=tmp.x;
        int ty=tmp.y;
        for(int i=0; i<4; i++) {
          int nx=tx+dx[i];
          int ny=ty+dy[i];
          if(nx<0||nx>n-1||ny<0||ny>m-1) continue;
          if(visited[nx][ny])continue;
          if(map[nx][ny]==1) continue;
          q.add(new Pair(nx, ny));
          map[nx][ny]=2;
          visited[nx][ny]=true;
        }
      }
    }
  }
  public static int cal() {
    int total=0;
    for(int i=0; i<n; i++) {
      for(int j=0; j<m; j++) {
        if(map[i][j]==0) {
          total++;
        }
      }
    }
    return total;
  }
  public static void copy(int c) {
    if(c==0) {
      for(int i=0; i<n; i++) {
        for(int j=0; j<m; j++) {
          copymap[i][j]=map[i][j];
        }
      }
    }
    else {
      for(int i=0; i<n; i++) {
        for(int j=0; j<m; j++) {
          map[i][j]=copymap[i][j];
          visited[i][j]=false;
        }
      }
    }
  }
  public static class Pair{
    int x,y;
    public Pair(int x, int y) {
      this.x=x;
      this.y=y;
    }
  }
  public static void main(String[] args) throws Exception{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st = new StringTokenizer(br.readLine());
    n=Integer.parseInt(st.nextToken());
    m=Integer.parseInt(st.nextToken());
    map=new int[n][m];
    copymap=new int[n][m];
    visited=new boolean[n][m];
    for(int i=0; i<n; i++) {
      st=new StringTokenizer(br.readLine());
      for(int j=0; j<m; j++) {
        map[i][j]=Integer.parseInt(st.nextToken());
        if(map[i][j]==2) virus.add(new Pair(i, j));
      }
    }
    solve(0);
    System.out.println(result);
  }
}
