package baekjoon;

import java.io.*;
import java.util.*;

public class Ex1726_로봇 {
  static int n,m;
  static int[][] map;
  static boolean[][][] visited;
  static int[] dx= {0,0,1,-1}; // 동쪽이 0, 서쪽이 1, 남쪽이 2, 북쪽이 3
  static int[] dy= {1,-1,0,0};
  static int sx,sy,sd;
  static int ex,ey,ed;
  static int result = Integer.MAX_VALUE;
  public static void solve(int x,int y, int d) {
    if(x==ex&&y==ey&&d==ed) {
      return;
    }
    int tx=x;
    int ty=y;
    for(int i=0; i<4; i++) { // 4방향으로 이동
      int nx=tx+dx[i];
      int ny=ty+dy[i];
      
      
    }
  }
  
  public static void go() {
    
  }
  public static class Pair{
    int x,y,d;
    public Pair(int x, int y, int d) {
      this.x=x;
      this.y=y;
      this.d=d;
    }
  }
  public static void main(String[] args) throws Exception{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st = new StringTokenizer(br.readLine());
    m=Integer.parseInt(st.nextToken());
    n=Integer.parseInt(st.nextToken());
    map=new int[n][m];
    visited=new boolean[n][m][4];
    for(int i=0; i<n; i++) {
      st=new StringTokenizer(br.readLine());
      for(int j=0; j<m; j++) {
        map[i][j]=Integer.parseInt(st.nextToken());
      }
    }
    st=new StringTokenizer(br.readLine());
    sx=Integer.parseInt(st.nextToken())-1;
    sy=Integer.parseInt(st.nextToken())-1;
    sd=Integer.parseInt(st.nextToken())-1;
    st=new StringTokenizer(br.readLine());
    ex=Integer.parseInt(st.nextToken())-1;
    ey=Integer.parseInt(st.nextToken())-1;
    ed=Integer.parseInt(st.nextToken())-1;
    solve(sx,sy,sd);
    System.out.println(result);
  }
}
