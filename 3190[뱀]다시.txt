import java.io.*;
import java.util.*;

public class Main {
  static int n,k,l;
  static int[][] map;
  static int[] dx= {1,-1,0,0}; // ³², ºÏ, µ¿, ¼­
  static int[] dy= {0,0,1,-1};
  static ArrayList<how> list = new ArrayList<>();
  static Deque<Pair> snake = new LinkedList<>();
  static int result=0;
  static int direction=2;
  
  public static void move(int x, int y) {
    map[0][0]=2;
    snake.add(new Pair(0, 0));
    int nx=0;
    int ny=0;
    int index=0;
    while(true) {
      result++;
      nx+=dx[direction];
      ny+=dy[direction];
      
      if(nx<0||nx>n-1||ny<0||ny>n-1||map[nx][ny]==2) return;
      
      if(map[nx][ny]==1) {
        map[nx][ny]=0;
      }
      else {
        Pair tmp=snake.pollFirst();
        int bx=tmp.x;
        int by=tmp.y;
        map[bx][by]=0;
      }
      map[nx][ny]=2;
      int k=index%l;
      snake.addLast(new Pair(nx, ny));
      if(result==list.get(k).x) {
        direction=turn(direction,list.get(index).d);
        index++;
      }
      
    }
  }
  
  public static int turn(int d, char h) {
    if(h=='L') {
      if(d==0) d=2;
      else if(d==1) d=3;
      else if(d==2) d=1;
      else d=0;
    }
    else if(h=='D') {
      if(d==0) d=3;
      else if(d==1) d=2;
      else if(d==2) d=0;
      else d=1;
    }
    return d;
  }
  public static class Pair{
    int x,y;
    public Pair(int x, int y) {
      this.x=x;
      this.y=y;
    }
  }
  public static class how{
    int x;
    char d;
    public how(int x, char d) {
      this.x=x;
      this.d=d;
    }
  }
  
  public static void main(String[] args) throws Exception{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in ));
    n=Integer.parseInt(br.readLine());
    k=Integer.parseInt(br.readLine());
    map=new int[n][n];
    for(int i=0; i<k; i++) {
      StringTokenizer st= new StringTokenizer(br.readLine());
      int x=Integer.parseInt(st.nextToken())-1;
      int y=Integer.parseInt(st.nextToken())-1;
      map[x][y]=1;
    }
    
    l=Integer.parseInt(br.readLine());
    for(int i=0; i<l; i++) {
      StringTokenizer st= new StringTokenizer(br.readLine());
      int x=Integer.parseInt(st.nextToken());
      char d=st.nextToken().charAt(0);
      list.add(new how(x, d));
    }
    move(0,0);
    System.out.println(result);
  }
}
