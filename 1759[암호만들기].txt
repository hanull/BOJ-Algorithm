import java.util.Arrays;
import java.util.Scanner;

// 최소 1개의 모음과, 최소 2개의 자음이 필요. 
public class Main {
  static int L, C;
  static char[] alpha;
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    L = sc.nextInt();
    C = sc.nextInt();
    alpha = new char[C];
    for(int i=0; i<C; i++) {
      alpha[i] = sc.next().charAt(0);
    }
    Arrays.sort(alpha);
    go("",0);
    
  }
  // 배열을 하나씩 이동하면서 만들 수 있는 모든 조합을 만든다.
  public static void go(String password, int i) {
    if(password.length()==L) {
      if(check(password)) {
        System.out.println(password);
      }
      return;
    }
    if(i>=alpha.length) return;
    // i번째 배열의 문자를 사용할 때와 사용하지 않을 때. 2가지 경우를 모두 생각.
    go(password+alpha[i], i+1);
    go(password, i+1);
  }
  // 자음과 모음의 갯수가 조건에 맞는지 확인
  public static boolean check(String password) {
    int ja=0; int mo=0;
    for(int i=0; i<password.length(); i++) {
      char k = password.charAt(i);
      if((k=='a')||(k=='e')||(k=='i')||(k=='o')||(k=='u')){
        mo+=1;
      }else {
        ja+=1;
      }
    }
    if(ja>=2&&mo>=1) return true;
    return false;
  }

}
