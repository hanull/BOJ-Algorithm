import java.io.*;
import java.util.*;

public class Main{
  static int n,l;
  static int[][] map1, map2;
  static boolean[] slop;
  static int result=0;
  
  public static void isPossible(int index, int[][] arr) {
    slop=new boolean[n];
    for(int i=0; i<n-1; i++) {
      int diff = arr[index][i]-arr[index][i+1];
      if(diff!=0) {
        if(diff!=1 && diff!=-1) return;
        
        if(diff==1) { // 오른쪽 아래로 경사로가 있음
          for(int j=1; j<=l; j++) {
            if(i+j>n-1||slop[i+j]==true) return;
            if(arr[index][i]-1!=arr[index][i+j]) return;
            slop[i+j]=true;
          }
        }
        else { // 왼쪽 아래로 경사로가 있음
          for(int j=0; j<l; j++) {
            if(i-j<0||slop[i-j]==true) return;
            if(arr[index][i]!=arr[index][i-j]) return;
            slop[i-j]=true;
          }
        }
      }
    }
    result++;
  }
  public static void main(String[] args) throws Exception{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st = new StringTokenizer(br.readLine());
    n=Integer.parseInt(st.nextToken());
    l=Integer.parseInt(st.nextToken());
    map1=new int[n][n];
    map2=new int[n][n];
    for(int i=0; i<n; i++) {
      st=new StringTokenizer(br.readLine());
      for(int j=0; j<n; j++) {
        map1[i][j]=map2[j][i]=Integer.parseInt(st.nextToken());
      }
    }
    for(int i=0; i<n; i++) {
      isPossible(i,map1);
      isPossible(i,map2);
    }
    System.out.println(result);
  }
}
