import java.io.*;
import java.util.*;

public class Main {
  static boolean[] visited;
  static int[] from;
  static char[] how;
  public static void bfs(int x, int goal) {
    Queue<Integer> q = new LinkedList<>();
    q.add(x);
    visited[x] = true;
    from[x] = 0;
    while(!q.isEmpty()) {
      int now = q.poll();
      if(now==goal) {
        print(now,x);
        break;
      }
      // D
      int next = (now*2)%10000;
      if(visited[next]==false) {
        q.add(next);
        visited[next] = true;
        from[next] = now;
        how[next] = 'D';
      }
      
      // S
      next = now-1;
      if(now==0) next=9999;
      if(visited[next]==false) {
        q.add(next);
        visited[next] = true;
        from[next] = now;
        how[next] = 'S';
      }
      
      // L       1234 -> 2341
      next = (now%1000)*10 + (now/1000);
      if(visited[next]==false) {
        q.add(next);
        visited[next] = true;
        from[next] = now;
        how[next] = 'L';
      }
      
      // R      1234 -> 4123
      next = (now/10) + (now%10)*1000;
      if(visited[next]==false) {
        q.add(next);
        visited[next] = true;
        from[next] = now;
        how[next] = 'R';
      }
    }
  }
  public static void print(int A, int B) {
    //System.out.println("A:"+A+" "+"B:"+B);
    if(from[A]!=B) {
      print(from[A],B);
    }
    System.out.print(how[A]);
  }
  public static void main(String[] args) throws Exception{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    int t = Integer.parseInt(br.readLine());
    for(int i=0; i<t; i++) {
      visited = new boolean[10000];
      from = new int[10000];
      how = new char[10000];
      String[] line = br.readLine().split(" ");
      int start = Integer.parseInt(line[0]);
      int end = Integer.parseInt(line[1]);
      bfs(start, end);
      System.out.println();
    }
  }

}
