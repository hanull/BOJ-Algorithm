import java.io.*;
import java.util.*;


public class Main{
  static int M,N;
  static boolean[][] check;
  static int[][] con;
  static int[] dx = {-1,0,1,0};
  static int[] dy = {0,1,0,-1};
  static Queue<Pair> q = new LinkedList<Pair>();
  static int result;
  public static class Pair{
    int x,y;
    public Pair(int x, int y) {
      this.x = x;
      this.y = y;
    }
  }
  public static void bfs() {
    result=0;
    while(!q.isEmpty()) {
      Pair tmp = q.poll();
      int tx = tmp.x;
      int ty = tmp.y;
      for(int i=0; i<4; i++) {
        int nx = tx+dx[i];
        int ny = ty+dy[i];
        if(nx<0||nx>=N||ny<0||ny>=M) continue;
        if(check[nx][ny]==false&&con[nx][ny]==0) {
          q.add(new Pair(nx, ny));
          check[nx][ny] = true;
          con[nx][ny] = con[tx][ty]+1;
          result = con[nx][ny]-1;
        }
      }
    }
  }
  public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String s[] = br.readLine().split(" ");
    M = Integer.parseInt(s[0]);
    N = Integer.parseInt(s[1]);
    con = new int[N][M];
    check = new boolean[N][M];
    for(int i=0; i<N; i++) {
      String[] line = br.readLine().split(" ");
      for(int j=0; j<M; j++) {
        con[i][j] = Integer.parseInt(line[j]);
        if(con[i][j]==1) {
          q.add(new Pair(i, j));
          check[i][j] = true;
        }
      }
    }
    bfs();
    boolean ok = true;
    for(int i=0; i<N; i++) {
      for(int j=0; j<M; j++) {
        if(con[i][j]==0) {
          ok = false;
        }
      }
    }
    if(ok==true) {
      System.out.println(result);
    }else {
      System.out.println("-1");
    }
    
  }
}
