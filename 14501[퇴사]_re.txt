import java.io.*;
import java.util.*;

public class Main {
  static int n;
  static int[] time;
  static int[] money;
  static int max = Integer.MIN_VALUE;
  public static void dfs(int day, int total, int last) {
    // 상담 가능한 날짜를 초과하면, 
    // 마지막 상담을 빼고 비교한다.
    if(day>=n) {
      if(day>n) {
        total -= last;
      }
      if(total>max) max = total;
      return;
    }
    // 상담 가능 할 때
    dfs(day+time[day],total+money[day],money[day]);
    // 상담 하지 않을 때
    dfs(day+1,total,last);
  }
  public static void main(String[] args) throws Exception{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    n = Integer.parseInt(br.readLine());
    time = new int[n+1];
    money = new int[n+1];
    for(int i=0; i<n; i++) {
      StringTokenizer st = new StringTokenizer(br.readLine());
      time[i] = Integer.parseInt(st.nextToken());
      money[i] = Integer.parseInt(st.nextToken());
    }
    dfs(0,0,0);
    System.out.println(max);
  }
}
