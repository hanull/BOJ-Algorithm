import java.util.*;

public class Main {
  static boolean[] visited;
  static int[] cnt, from;
  public static void bfs(int x, int goal) {
    Queue<Integer> q = new LinkedList<>();
    q.add(x);
    visited[x] = true;
    cnt[x] = 0;
    while(!q.isEmpty()) {
      int now = q.poll();
      if(now==goal) {
        System.out.println(cnt[now]);
        print(now,x);
        break;
      }
      int next = now-1;
      if(next>=0&&visited[next]==false) {
        q.add(next);
        visited[next] = true;
        cnt[next]=cnt[now]+1;
        from[next] = now;
      }
      next = now +1;
      if(next<=100000&&visited[next]==false) {
        q.add(next);
        visited[next] = true;
        cnt[next]=cnt[now]+1;
        from[next] = now;
      }
      next = now*2;
      if(next<=100000&&visited[next]==false) {
        q.add(next);
        visited[next] = true;
        cnt[next]=cnt[now]+1;
        from[next] = now;
      }
    }
  }
  public static void print(int x, int goal) {
    if(x!=goal) {
      print(from[x],goal);
    }
    System.out.print(x+" ");
  }
  public static void main(String[] args) {
    Scanner sc  = new Scanner(System.in);
    int N = sc.nextInt();
    int K = sc.nextInt();
    visited = new boolean[100001];
    cnt = new int[100001];
    from = new int[100001];
    bfs(N,K);
    
  }
}
