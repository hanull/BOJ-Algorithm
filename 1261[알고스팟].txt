import java.io.*;
import java.util.*;

public class Main {
  static int N,M;
  static int[][] map;
  static int[][] result;
  static int[] dx = {-1,0,1,0};
  static int[] dy = {0,-1,0,1};
  public static class Pair{
    int x,y;
    public Pair(int x, int y) {
      this.x = x;
      this.y = y;
    }
  }
  public static void bfs(int x, int y) {
    Deque<Pair> dq = new LinkedList<>();
    dq.add(new Pair(x, y));
    result[x][y] = 0;
    while(!dq.isEmpty()) {
      Pair tmp = dq.poll();
      int tx = tmp.x;
      int ty = tmp.y;
      for(int i=0; i<4; i++) {
        int nx = tx+dx[i];
        int ny = ty+dy[i];
        if(nx>=0&&nx<M&&ny>=0&&ny<N&&result[nx][ny]==-1) {
          if(map[nx][ny]==0) {
            dq.addFirst(new Pair(nx,ny));
            result[nx][ny] = result[tx][ty];
          }else {
            dq.addLast(new Pair(nx,ny));
            result[nx][ny] = result[tx][ty]+1;
          }
        }
      }
    }
    System.out.println(result[M-1][N-1]);
  }
  public static void main(String[] args) throws Exception{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String[] s = br.readLine().split(" ");
    N = Integer.parseInt(s[0]);
    M = Integer.parseInt(s[1]);
    map = new int[M][N];
    result = new int[M][N];
    for(int i=0; i<M; i++) {
      String[] line = br.readLine().split("");
      for(int j=0; j<N; j++) {
        map[i][j] = Integer.parseInt(line[j]);
        result[i][j] = -1;
      }
    }
    bfs(0,0);
  }

}
