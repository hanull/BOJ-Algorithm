import java.io.*;
import java.util.*;

public class Main {
  static int n,m,k, x, y;
  static int[] dice = new int[7];
  static int[][] map;
  static int[] direction;
  static int[] dx = {0,0,0,-1,1}; // 동, 서, 북, 남
  static int[] dy = {0,1,-1,0,0};
  public static void main(String[] args) throws Exception{
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st = new StringTokenizer(br.readLine());
    n = Integer.parseInt(st.nextToken());
    m = Integer.parseInt(st.nextToken());
    x = Integer.parseInt(st.nextToken());
    y = Integer.parseInt(st.nextToken());
    k = Integer.parseInt(st.nextToken());
    map = new int[n][m];
    direction = new int[k];
    // 지도 정보 입력
    for(int i=0; i<n; i++) {
      String[] line = br.readLine().split(" ");
      for(int j=0; j<m; j++) {
        map[i][j] = Integer.parseInt(line[j]);
      }
    }
    // 방향 정보 입력
    st = new StringTokenizer(br.readLine());
    for(int i=0; i<k; i++) {
      direction[i] = Integer.parseInt(st.nextToken());
    }
    
    // 주사위 굴리기
    // 동쪽:1, 서쪽:2, 북쪽:3, 남쪽:4
    int next_num =0;
    int tmp = 0;
    StringBuilder sb = new StringBuilder();
    for(int i=0; i<k; i++) {
      int idx = direction[i];
      int tx = x+dx[idx];
      int ty = y+dy[idx];
      if(tx<0||tx>n-1||ty<0||ty>m-1) continue;
      else {
        x = tx; y = ty;
      }
      switch (idx) {
      case 1: // 동
        tmp = dice[1];
        dice[1] = dice[4];
        dice[4] = dice[6];
        dice[6] = dice[3];
        dice[3] = tmp;
        sb.append(dice[1]);
        sb.append("\n");
        break;
      case 2: // 서
        tmp = dice[1];
        dice[1] = dice[3];
        dice[3] = dice[6];
        dice[6] = dice[4];
        dice[4] = tmp;
        next_num = map[x][y];
        sb.append(dice[1]);
        sb.append("\n");
        break;
      case 3: // 북
        tmp = dice[1];
        dice[1] = dice[2];
        dice[2] = dice[6];
        dice[6] = dice[5];
        dice[5] = tmp;
        sb.append(dice[1]);
        sb.append("\n");
        break;
      default: // 남
        tmp = dice[1];
        dice[1] = dice[5];
        dice[5] = dice[6];
        dice[6] = dice[2];
        dice[2] = tmp;
        sb.append(dice[1]);
        sb.append("\n");
        break;
      }
      // 다음칸이 0일때, 주사위 바닥-> 칸; 
      // 다음칸!=0, 칸-> 주사위 바닥, 칸의 수=0;
      next_num = map[x][y];
      if(next_num==0) {
        map[x][y] = dice[6];
      }else {
        dice[6] = map[x][y];
        map[x][y] = 0;
      }
    } // end for();
    System.out.println(sb);
  }
}
